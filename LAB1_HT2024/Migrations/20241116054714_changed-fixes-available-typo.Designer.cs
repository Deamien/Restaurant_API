// <auto-generated />
using System;
using LAB1_HT2024.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAB1_HT2024.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20241116054714_changed-fixes-available-typo")]
    partial class changedfixesavailabletypo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LAB1_HT2024.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LAB1_HT2024.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            Name = "Margherita Pizza",
                            Price = 100
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            Name = "Caesar Salad",
                            Price = 60
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            Name = "Spaghetti Bolognese",
                            Price = 120
                        },
                        new
                        {
                            Id = 4,
                            Available = false,
                            Name = "Grilled Salmon",
                            Price = 150
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            Name = "Chocolate Cake",
                            Price = 70
                        },
                        new
                        {
                            Id = 6,
                            Available = true,
                            Name = "Bruschetta",
                            Price = 74
                        },
                        new
                        {
                            Id = 7,
                            Available = true,
                            Name = "Fried Calamari",
                            Price = 109
                        },
                        new
                        {
                            Id = 8,
                            Available = true,
                            Name = "Marinara Sauce Spaghetti",
                            Price = 94
                        },
                        new
                        {
                            Id = 9,
                            Available = true,
                            Name = "Chicken Alfredo",
                            Price = 134
                        },
                        new
                        {
                            Id = 10,
                            Available = true,
                            Name = "Beef Burger",
                            Price = 119
                        },
                        new
                        {
                            Id = 11,
                            Available = true,
                            Name = "Vegetable Stir Fry",
                            Price = 104
                        },
                        new
                        {
                            Id = 12,
                            Available = true,
                            Name = "BBQ Ribs",
                            Price = 169
                        },
                        new
                        {
                            Id = 13,
                            Available = true,
                            Name = "Shrimp Scampi",
                            Price = 149
                        },
                        new
                        {
                            Id = 14,
                            Available = true,
                            Name = "Eggplant Parmesan",
                            Price = 124
                        });
                });

            modelBuilder.Entity("LAB1_HT2024.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId_FK")
                        .HasColumnType("int");

                    b.Property<int>("GroupSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<int>("TableId_FK")
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.HasIndex("customerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("LAB1_HT2024.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Seats = 2
                        },
                        new
                        {
                            Id = 2,
                            Seats = 3
                        },
                        new
                        {
                            Id = 3,
                            Seats = 4
                        },
                        new
                        {
                            Id = 4,
                            Seats = 5
                        },
                        new
                        {
                            Id = 5,
                            Seats = 6
                        },
                        new
                        {
                            Id = 6,
                            Seats = 7
                        },
                        new
                        {
                            Id = 7,
                            Seats = 8
                        },
                        new
                        {
                            Id = 8,
                            Seats = 9
                        },
                        new
                        {
                            Id = 9,
                            Seats = 10
                        },
                        new
                        {
                            Id = 10,
                            Seats = 11
                        },
                        new
                        {
                            Id = 11,
                            Seats = 12
                        },
                        new
                        {
                            Id = 12,
                            Seats = 13
                        },
                        new
                        {
                            Id = 13,
                            Seats = 14
                        },
                        new
                        {
                            Id = 14,
                            Seats = 15
                        });
                });

            modelBuilder.Entity("LAB1_HT2024.Models.Reservation", b =>
                {
                    b.HasOne("LAB1_HT2024.Models.Table", null)
                        .WithMany("reservation")
                        .HasForeignKey("TableId");

                    b.HasOne("LAB1_HT2024.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("LAB1_HT2024.Models.Table", b =>
                {
                    b.Navigation("reservation");
                });
#pragma warning restore 612, 618
        }
    }
}
